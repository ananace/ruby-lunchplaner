---
stages:
  - test
  - push
  - deploy

image: "ruby:2.4"

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby

rubocop:
  stage: test
  script:
    - gem install rubocop -N
    - rubocop

# rspec:
#   stage: test
#   cache:
#     policy: pull
#   before_script:
#     - gem install bundler  --no-ri --no-rdoc
#     - bundle install -j $(nproc) --path vendor
#   script:
#     - rspec spec

push:image:
  stage: push
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: []
  script:
    - mkdir -p /root/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /root/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile $DOCKER_PROXY --destination $CI_REGISTRY_IMAGE --verbosity warn
  only:
    - master


.start:environment:
  stage: deploy
  image: boxboat/kubectl
  before_script: []
  script:
    - |
      # Deploy environment with kubectl apply

      kubectl apply -f - <<EOF
      ---
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        annotations:
          app.gitlab.com/app: $CI_PROJECT_PATH_SLUG
          app.gitlab.com/env: $CI_ENVIRONMENT_SLUG
        labels:
          app: lunchplaner
          environment: $CI_ENVIRONMENT_SLUG
        name: ${CI_ENVIRONMENT_SLUG}-lunchplaner
      spec:
        replicas: 1
        revisionHistoryLimit: 1
        selector:
          matchLabels:
            app: lunchplaner
            environment: $CI_ENVIRONMENT_SLUG
        template:
          metadata:
            annotations:
              se.liu.gitlab/commit: $CI_COMMIT_SHA
              prometheus.io/port: "4567"
              prometheus.io/scrape: "true"
              app.gitlab.com/app: $CI_PROJECT_PATH_SLUG
              app.gitlab.com/env: $CI_ENVIRONMENT_SLUG
            labels:
              app: lunchplaner
              environment: $CI_ENVIRONMENT_SLUG
          spec:
            containers:
            - env:
              - name: http_proxy
                value: http://squid-proxy.kube-system.svc:3128/
              - name: https_proxy
                value: http://squid-proxy.kube-system.svc:3128/
              image: $CI_REGISTRY_IMAGE
              imagePullPolicy: Always
              name: lunchplaner
              ports:
              - containerPort: 4567
                protocol: TCP
              readinessProbe:
                tcpSocket:
                  port: 4567
              resources:
                limits:
                  cpu: 100m
                  memory: 80Mi
                requests:
                  cpu: 15m
                  memory: 42Mi
      ---
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: lunchplaner
          environment: $CI_ENVIRONMENT_SLUG
        name: ${CI_ENVIRONMENT_SLUG}-lunchplaner
      spec:
        ports:
        - name: web
          port: 80
          protocol: TCP
          targetPort: 4567
        selector:
          app: lunchplaner
          environment: $CI_ENVIRONMENT_SLUG
        type: ClusterIP
      EOF
    - |
      # Deploy production ingress only on the production environment

      [ "$CI_ENVIRONMENT_SLUG" == "production" ] && kubectl apply -f - <<EOF || true
      ---
      # Publicly accessible ingress
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        annotations:
          kubernetes.io/ingress.class: nginx-public
        name: ${CI_ENVIRONMENT_SLUG}-lunchplaner-public
        labels:
          app: lunchplaner
          environment: $CI_ENVIRONMENT_SLUG
      spec:
        rules:
        - host: lunch.kubernetes-public.it.liu.se
          http:
            paths:
            - backend:
                serviceName: ${CI_ENVIRONMENT_SLUG}-lunchplaner
                servicePort: 80
              path: /
      ---
      # Internal only ingress
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: ${CI_ENVIRONMENT_SLUG}-lunchplaner
        labels:
          app: lunchplaner
          environment: $CI_ENVIRONMENT_SLUG
      spec:
        rules:
        - host: lunch.kubernetes.it.liu.se
          http:
            paths:
            - backend:
                serviceName: ${CI_ENVIRONMENT_SLUG}-lunchplaner
                servicePort: 80
              path: /
      EOF
  variables:
    GIT_STRATEGY: none

.stop:environment:
  stage: deploy
  when: manual
  image: boxboat/kubectl
  before_script: []
  script:
    - kubectl delete deploy ${CI_ENVIRONMENT_SLUG}-lunchplaner
    - kubectl delete svc ${CI_ENVIRONMENT_SLUG}-lunchplaner
    # Only exists on production environment, so failed deletion is not an error
    - kubectl delete ingress ${CI_ENVIRONMENT_SLUG}-lunchplaner || true
  variables:
    GIT_STRATEGY: none


deploy:production:
  extends: .start:environment
  environment:
    name: production
    on_stop: stop:production
  only:
    - master

stop:production:
  extends: .stop:environment
  environment:
    name: production
    action: stop
