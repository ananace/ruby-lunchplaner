---
stages:
  - test
  - push
  - deploy

image: "ruby"

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby

rubocop:
  stage: test
  script:
    - gem install rubocop -N
    - rubocop

# rspec:
#   stage: test
#   cache:
#     policy: pull
#   before_script:
#     - gem install bundler  --no-ri --no-rdoc
#     - bundle install -j $(nproc) --path vendor
#   script:
#     - rspec spec

push:image:
  stage: push
  image: quay.io/podman/stable
  script:
    - podman build --tag "$CI_REGISTRY_IMAGE" --file "${CI_PROJECT_DIR}/Dockerfile" $CI_PROJECT_DIR
    - podman push --creds "${CI_REGISTRY_USER}:${CI_JOB_TOKEN}" "$CI_REGISTRY_IMAGE" "docker://${CI_REGISTRY_IMAGE}"
  only:
    - master
  variables:
    _BUILDAH_STARTED_IN_USERNS: ''
    BUILDAH_ISOLATION: chroot
    BUILDAH_FORMAT: docker
    STORAGE_DRIVER: vfs


.start:environment:
  stage: deploy
  image: boxboat/kubectl
  before_script: []
  script:
    - |
      # Deploy environment with kubectl apply

      kubectl apply --server-side --force-conflicts -f - <<EOF
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        annotations:
          app.gitlab.com/app: $CI_PROJECT_PATH_SLUG
          app.gitlab.com/env: $CI_ENVIRONMENT_SLUG
        labels:
          app.kubernetes.io/name: lunchplaner
          app.kubernetes.io/component: frontend
        name: lunchplaner-frontend
      spec:
        replicas: 2
        revisionHistoryLimit: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: lunchplaner
            app.kubernetes.io/component: frontend
        template:
          metadata:
            annotations:
              prometheus.io/port: "9292"
              prometheus.io/scrape: "true"
              se.liu.gitlab/commit: $CI_COMMIT_SHA
              app.gitlab.com/app: $CI_PROJECT_PATH_SLUG
              app.gitlab.com/env: $CI_ENVIRONMENT_SLUG
            labels:
              app.kubernetes.io/name: lunchplaner
              app.kubernetes.io/component: frontend
          spec:
            containers:
            - image: $CI_REGISTRY_IMAGE
              imagePullPolicy: Always
              name: lunchplaner
              ports:
              - containerPort: 9292
                protocol: TCP
                name: web
              livenessProbe:
                httpGet:
                  port: 9292
                  path: '/healthz'
              readinessProbe:
                tcpSocket:
                  port: 9292
              resources:
                limits:
                  cpu: 100m
                  memory: 80Mi
                requests:
                  cpu: 100m
                  memory: 80Mi
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        annotations:
          app.gitlab.com/app: $CI_PROJECT_PATH_SLUG
          app.gitlab.com/env: $CI_ENVIRONMENT_SLUG
        labels:
          app.kubernetes.io/name: lunchplaner
          app.kubernetes.io/component: backend
        name: lunchplaner-backend
      spec:
        replicas: 2
        revisionHistoryLimit: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: lunchplaner
            app.kubernetes.io/component: backend
        template:
          metadata:
            annotations:
              prometheus.io/port: "9292"
              prometheus.io/scrape: "true"
              se.liu.gitlab/commit: $CI_COMMIT_SHA
              app.gitlab.com/app: $CI_PROJECT_PATH_SLUG
              app.gitlab.com/env: $CI_ENVIRONMENT_SLUG
            labels:
              app.kubernetes.io/name: lunchplaner
              app.kubernetes.io/component: backend
          spec:
            containers:
            - image: $CI_REGISTRY_IMAGE
              imagePullPolicy: Always
              name: lunchplaner
              ports:
              - containerPort: 9292
                protocol: TCP
                name: web
              livenessProbe:
                httpGet:
                  port: 9292
                  path: '/healthz'
              readinessProbe:
                tcpSocket:
                  port: 9292
              resources:
                limits:
                  cpu: 100m
                  memory: 80Mi
                requests:
                  cpu: 100m
                  memory: 80Mi
      ---
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app.kubernetes.io/name: lunchplaner
          app.kubernetes.io/component: frontend
        name: lunchplaner-frontend
      spec:
        ports:
        - name: web
          port: 80
          protocol: TCP
          targetPort: 9292
        selector:
          app.kubernetes.io/name: lunchplaner
          app.kubernetes.io/component: frontend
        type: ClusterIP
      ---
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app.kubernetes.io/name: lunchplaner
          app.kubernetes.io/component: backend
        name: lunchplaner-backend
      spec:
        ports:
        - name: web
          port: 80
          protocol: TCP
          targetPort: 9292
        selector:
          app.kubernetes.io/name: lunchplaner
          app.kubernetes.io/component: backend
        type: ClusterIP
      EOF
    - |
      # Deploy production ingress only on the production environment

      [ "$CI_ENVIRONMENT_SLUG" == "production" ] && kubectl apply --server-side --force-conflicts -f - <<EOF || true
      ---
      # Publicly accessible ingress
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        annotations:
          kubernetes.io/ingress.class: nginx-public
          kubernetes.io/tls-acme: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-https-redirect@kubernetescrd
        name: lunchplaner-public
        labels:
          app.kubernetes.io/name: lunchplaner
      spec:
        rules:
        - host: lunch.kubernetes-public.it.liu.se
          http:
            paths:
            - backend:
                service:
                  name: lunchplaner-backend
                  port:
                    number: 80
              path: /api
              pathType: Prefix
            - backend:
                service:
                  name: lunchplaner-frontend
                  port:
                    number: 80
              path: /
              pathType: Prefix
        tls:
        - hosts:
          - '*.kubernetes-public.it.liu.se'
          secretName: lunchplaner-public-tls
      ---
      # Internal only ingress
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        annotations:
          kubernetes.io/tls-acme: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-https-redirect@kubernetescrd
        name: lunchplaner
        labels:
          app.kubernetes.io/name: lunchplaner
      spec:
        rules:
        - host: lunch.kubernetes.it.liu.se
          http:
            paths:
            - backend:
                service:
                  name: lunchplaner-backend
                  port:
                    number: 80
              path: /api
              pathType: Prefix
            - backend:
                service:
                  name: lunchplaner-frontend
                  port:
                    number: 80
              path: /
              pathType: Prefix
        tls:
        - hosts:
          - '*.kubernetes.it.liu.se'
          secretName: lunchplaner-tls
      EOF
  variables:
    GIT_STRATEGY: none

.stop:environment:
  stage: deploy
  when: manual
  image: boxboat/kubectl
  before_script: []
  script:
    - kubectl delete deploy ${CI_ENVIRONMENT_SLUG}-lunchplaner
    - kubectl delete svc ${CI_ENVIRONMENT_SLUG}-lunchplaner
    # Only exists on production environment, so failed deletion is not an error
    - kubectl delete ingress ${CI_ENVIRONMENT_SLUG}-lunchplaner || true
  variables:
    GIT_STRATEGY: none


deploy:production:
  extends: .start:environment
  environment:
    name: production
    on_stop: stop:production
  only:
    - master

stop:production:
  extends: .stop:environment
  environment:
    name: production
    action: stop
