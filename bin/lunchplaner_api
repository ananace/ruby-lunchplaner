#!/usr/bin/env ruby

require 'lunchplaner'
require 'sinatra'
require 'psych'

class String
  def underscore
    gsub(/::/, '/')
      .gsub(/([A-Z]+)([A-Z][a-z])/, '\1_\2')
      .gsub(/([a-z\d])([A-Z])/, '\1_\2')
      .tr('-', '_')
      .downcase
  end
end

class Class
  def demodularized
    name.split('::').last
  end
end

get '/' do
  Lunchplaner.all.map do |obj|
    c = obj.delete(:source)
    [c.class.demodularized.underscore, obj]
  end.to_h.to_json
end

get '/:backend' do |backend|
  b = Lunchplaner::Backends.const_get(backend.split('_').map(&:capitalize).join('')).new

  {
    b.class.demodularized.underscore => b.all.merge(name: b.to_s, url: b.url)
  }.to_json
end

get '/:backend/:method' do |backend, method|
  raise "Invalid action '#{method}'" unless %i[url name daily weekly all].include?(method.to_s.to_sym)

  b = Lunchplaner::Backends.const_get(backend.split('_').map(&:capitalize).join('')).new

  b.send(method.to_s.to_sym).to_json
end
